IIDX31pc(status="0" qproback=settings.qpro_back)
  pcdata(d_auto_scrach=pc_data.d_auto_scrach d_camera_layout=pc_data.d_camera_layout d_disp_judge=pc_data.d_disp_judge d_exscore=pc_data.d_exscore d_gauge_disp=pc_data.d_gauge_disp d_ghost_score=pc_data.d_ghost_score d_gno=pc_data.d_gno d_graph_score=pc_data.d_graph_score d_gtype=pc_data.d_gtype d_hispeed=pc_data.d_hispeed d_judge=pc_data.d_judge d_judgeAdj=pc_data.d_judgeAdj d_lane_brignt=pc_data.d_lane_brignt d_liflen=pc_data.d_liflen d_notes=pc_data.d_notes d_opstyle=pc_data.d_opstyle d_pace=pc_data.d_pace d_sdlen=pc_data.d_sdlen d_sdtype=pc_data.d_sdtype d_sorttype=pc_data.d_sorttype d_sub_gno=pc_data.d_sub_gno d_timing=pc_data.d_timing d_timing_split=pc_data.d_timing_split d_tsujigiri_disp=pc_data.d_tsujigiri_disp d_tune=pc_data.d_tune d_visualization=pc_data.d_visualization dach=pc_data.dach dp_opt=pc_data.dp_opt dp_opt2=pc_data.dp_opt2 dpnum=0 gpos=pc_data.gpos id=profile.iidxid idstr=profile.iidxidstr mode=pc_data.mode name=profile.name pid=profile.pid pmode=pc_data.pmode rtype=pc_data.rtype s_auto_scrach=pc_data.s_auto_scrach s_camera_layout=pc_data.s_camera_layout s_disp_judge=pc_data.s_disp_judge s_exscore=pc_data.s_exscore s_gauge_disp=pc_data.s_gauge_disp s_ghost_score=pc_data.s_ghost_score s_gno=pc_data.s_gno s_graph_score=pc_data.s_graph_score s_gtype=pc_data.s_gtype s_hispeed=pc_data.s_hispeed s_judge=pc_data.s_judge s_judgeAdj=pc_data.s_judgeAdj s_lane_brignt=pc_data.s_lane_brignt s_liflen=pc_data.s_liflen s_notes=pc_data.s_notes s_opstyle=pc_data.s_opstyle s_pace=pc_data.s_pace s_sdlen=pc_data.s_sdlen s_sdtype=pc_data.s_sdtype s_sorttype=pc_data.s_sorttype s_sub_gno=pc_data.s_sub_gno s_timing=pc_data.s_timing s_timing_split=pc_data.s_timing_split s_tsujigiri_disp=pc_data.s_tsujigiri_disp s_tune=pc_data.s_tune s_visualization=pc_data.s_visualization sach=pc_data.sach sp_opt=pc_data.sp_opt spnum=pc_data.spnum ngrade=pc_data.ngrade s_auto_adjust=pc_data.s_auto_adjust d_auto_adjust=pc_data.d_auto_adjust player_kind=pc_data.player_kind s_classic_hispeed=pc_data.s_classic_hispeed d_classic_hispeed=pc_data.d_classic_hispeed)
  lightning_play_data(dpnum=lightning_playdata.dp_num spnum=lightning_playdata.sp_num)
  lightning_setting(headphone_vol=lightning_settings.headphone_vol resistance_dp_left=lightning_settings.resistance_dp_left resistance_dp_right=lightning_settings.resistance_dp_right resistance_sp_left=lightning_settings.resistance_sp_left resistance_sp_right=lightning_settings.resistance_sp_right keyboard_kind=lightning_settings.keyboard_kind brightness=lightning_settings.brightness)
    slider(__type="s32" __count="7") #{lightning_settings.vefx[0]} #{lightning_settings.vefx[1]} #{lightning_settings.vefx[2]} #{lightning_settings.vefx[3]} #{lightning_settings.vefx[4]} #{lightning_settings.vefx[5]} #{lightning_settings.vefx[6]}
    light(__type="bool" __count="10") #{lightning_settings.light[0]} #{lightning_settings.light[1]} #{lightning_settings.light[2]} #{lightning_settings.light[3]} #{lightning_settings.light[4]} #{lightning_settings.light[5]} #{lightning_settings.light[6]} #{lightning_settings.light[7]} #{lightning_settings.light[8]} #{lightning_settings.light[9]}
    concentration(__type="bool") #{lightning_settings.concentration}
  spdp_rival(flg="0")
  bind_eaappli
  ea_premium_course
  kac_entry_info
    enable_kac_deller
    disp_kac_mark
    is_kac_entry
    is_kac_evnet_entry
  secret
    flg1(__type="s64" __count="3") -1 -1 -1
    flg2(__type="s64" __count="3") -1 -1 -1
    flg3(__type="s64" __count="3") -1 -1 -1
    flg4(__type="s64" __count="3") -1 -1 -1
  leggendaria
    flg1(__type="s64" __count="3") -1 -1 -1
  music_memo
    - for (let m of mArray)
      folder(play_style=m.play_style folder_id=m.folder_idx name=m.folder_name)
        music_id(__type="s32" __count="10") #{m.music_ids[0]} #{m.music_ids[1]} #{m.music_ids[2]} #{m.music_ids[3]} #{m.music_ids[4]} #{m.music_ids[5]} #{m.music_ids[6]} #{m.music_ids[7]} #{m.music_ids[8]} #{m.music_ids[9]}
  music_filter
    - for (let f of fArray)
      folder(play_style=f.play_style folder_id=f.folder_id filter_id=f.filter_id value0=f.value0 value1=f.value1)
        is_valid(__type="bool") #{f.is_valid}
  qpro_secret
    head(__type="s64" __count="7") -1 -1 -1 -1 -1 -1 -1
    hair(__type="s64" __count="7") -1 -1 -1 -1 -1 -1 -1
    face(__type="s64" __count="7") -1 -1 -1 -1 -1 -1 -1
    body(__type="s64" __count="7") -1 -1 -1 -1 -1 -1 -1
    hand(__type="s64" __count="7") -1 -1 -1 -1 -1 -1 -1
    back(__type="s64" __count="7") -1 -1 -1 -1 -1 -1 -1
  grade(sgid=pc_data.sgid dgid=pc_data.dgid)
    - for (let d of dArray)
      g(__type="u8" __count="4") #{d[0]} #{d[1]} #{d[2]} #{d[3]}
  kiwami_data
    - for (let ed of eArray)
      detail(grade_type=ed.grade_type grade_id=ed.grade_id option=ed.option stage_num=ed.stage_num clear_type=ed.clear_type)
        past(__type="s32" __count="3") #{ed.past[0]} #{ed.past[1]} #{ed.past[2]}
        selected_course(__type="s32" __count="3") #{ed.selected_course[0]} #{ed.selected_course[1]} #{ed.selected_course[2]}
        max_past(__type="s32" __count="3") #{ed.max_past[0]} #{ed.max_past[1]} #{ed.max_past[2]}
        max_selected_course(__type="s32" __count="3") #{ed.max_selected_course[0]} #{ed.max_selected_course[1]} #{ed.max_selected_course[2]}
  skin(__type="s32" __count="20") #{appendsetting} #{settings.note_burst} #{settings.bomb_size} #{settings.turntable} #{settings.judge_font} #{settings.note_skin} #{settings.note_size} #{settings.disable_musicpreview} #{settings.vefx_lock} #{settings.effect} #{settings.menu_music} #{settings.disable_hcn_color} #{settings.first_note_preview} #{settings.lane_cover} #{settings.pacemaker_cover} #{settings.lift_cover} #{settings.note_beam} #{settings.note_beam_size} #{settings.full_combo_splash} 0
  tdjskin(__type="s16" __count="4") #{settings.premium_skin} #{settings.premium_bg} 0 0
  qprodata(__type="u32" __count="6") #{settings.qpro_head} #{settings.qpro_hair} #{settings.qpro_face} #{settings.qpro_hand} #{settings.qpro_body}
  rlist
    - for (let rd of rArray)
      rival(spdp=rd.play_style id=rd.profile[2] id_str=rd.profile[3] djname=rd.profile[0] pid=rd.profile[1] sg=rd.pc_data[0] dg=rd.pc_data[1] sa=rd.pc_data[2] da=rd.pc_data[3])
        is_robo(__type="bool") rd.is_robo
        qprodata(body=rd.qprodata[3] face=rd.qprodata[2] hair=rd.qprodata[0] hand=rd.qprodata[4] head=rd.qprodata[1] back=rd.qprodata[5])
        shop(name=shop_data.shop_name)
  notes_radar(style="0")
    radar_score(__type="s32" __count="6") #{pc_data.spradar[0]} #{pc_data.spradar[1]} #{pc_data.spradar[2]} #{pc_data.spradar[3]} #{pc_data.spradar[4]} #{pc_data.spradar[5]}
  notes_radar(style="1")
    radar_score(__type="s32" __count="6") #{pc_data.dpradar[0]} #{pc_data.dpradar[1]} #{pc_data.dpradar[2]} #{pc_data.dpradar[3]} #{pc_data.dpradar[4]} #{pc_data.dpradar[5]}
  weekly(mid="-1" wid="1")
  visitor(anum="1" pnum="2" snum="1" vs_flg="1")
  step(dp_fluctuation=pc_data.dp_fluctuation dp_level=pc_data.dp_level dp_mplay=pc_data.dp_mplay enemy_damage=pc_data.enemy_damage enemy_defeat_flg=pc_data.enemy_defeat_flg mission_clear_num=pc_data.mission_clear_num progress=pc_data.progress sp_fluctuation=pc_data.sp_fluctuation sp_level=pc_data.sp_level sp_mplay=pc_data.sp_mplay tips_read_list=pc_data.tips_read_list total_point=pc_data.total_point)
    is_track_ticket(__type="bool") 1
  packinfo(music_0="-1" music_1="-1" music_2="-1" pack_id="1")
  achievements(last_weekly="0" pack="0" pack_comp="0" rival_crush="0" visit_flg="0" weekly_num="0")
  deller(deller=pc_data.deller rate="0")
  orb_data(present_orb="100" rest_orb="100")
  qpro_ticket(ticket_num="100" total_ticket_num="100")
  old_linkage_secret_flg(song_battle="-1" bemani_mixup="-1" ccj_linkage="-1" triple_tribe="-1")
  arena_data(play_num="2" play_num_dp="1" play_num_sp="1" prev_best_class_sp="20" prev_best_class_dp="20")
    achieve_data(play_style="0" arena_class="20" rating_value="20" now_top_class_continuing="0" best_top_class_continuing="0" win_count="0" now_winning_streak_count="0" best_winning_streak_count="0" perfect_win_count="0" counterattack_num="0" mission_clear_num="0")
    achieve_data(play_style="1" arena_class="20" rating_value="20" now_top_class_continuing="0" best_top_class_continuing="0" win_count="0" now_winning_streak_count="0" best_winning_streak_count="0" perfect_win_count="0" counterattack_num="0" mission_clear_num="0")
    cube_data(cube="0" season_id="0")
    chat_data(chat_type_0="CHAT CUSTOM 1" chat_type_1="CHAT CUSTOM 2" chat_type_2="CHAT CUSTOM 3" chat_type_3="CHAT CUSTOM 4")
      is_chat_0(__type="bool") 1
      is_chat_1(__type="bool") 1
      is_chat_2(__type="bool") 1
      is_chat_3(__type="bool") 1
  skin_customize_flg(skin_frame_flg="-1" skin_turntable_flg="-1" skin_bomb_flg="-1" skin_bgm_flg="-1" skin_lane_flg0="-1" skin_lane_flg1="-1" skin_lane_flg2="-1" skin_lane_flg3="-1" skin_lane_flg4="-1" skin_lane_flg5="-1" skin_notes_flg="-1" skin_fullcombo_flg="-1" skin_keybeam_flg="-1" skin_judgestring_flg="-1")
  tdjskin_customize_flg(skin_submonitor_flg="-1" skin_subbg_flg="-1")
  event_1(event_play_num=pc_data.event_play_num last_select_map_id=pc_data.event_last_select_map_id)
    - for (let evt of evtArray)
      map_data(map_id=evt.map_id play_num=evt.play_num play_num_uc=evt.play_num_uc last_select_pos=evt.last_select_pos map_prog=evt.map_prog gauge=evt.gauge tile_num=evt.tile_num metron_total_get=evt.metron_total_get metron_total_use=evt.metron_total_use bank_date=evt.bank_date grade_bonus=evt.grade_bonus end_bonus=evt.end_bonus carryover_use=evt.carryover_use)
    - for (let evt2 of evtArray2)
      building_data(map_id=evt2.map_id pos=evt2.pos building=evt2.building use_tile=evt2.use_tile)
    - for (let evt3 of evtArray3)
      shop_data(map_id=evt3.map_id reward_id=evt3.reward_id prog=evt3.prog)
  ultimate_mobile_link(music_list="-1")
    link_flag
  valkyrie_linkage(music_list_1="-1" music_list_2="-1" music_list_3="-1")
  ccj_linkage(music_list="-1")
  triple_tribe_2(music_list="-1")
  language_setting(language=profile.language)
  movie_agreement(agreement_version="1")
  movie_setting
    hide_name(__type="bool") 0
  world_tourism
    - for (let wd of wArray)
      tour_data(tour_id=wd.tour_id progress=wd.progress)
  world_tourism_secret_flg
    flg1(__type="s64" __count="3") -1 -1 -1
    flg2(__type="s64" __count="3") -1 -1 -1
  world_tourism_setting
    booster(__type="bool") 1
  badge
    badge_data(category_id="0" badge_flg_id="0" badge_flg="0")
    badge_equip(category_id="0" badge_flg="0" badge_flg_id="0" index="0" slot="0")
      equip_flg(__type="bool") 0
